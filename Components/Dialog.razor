@if (_isShow)
{
    <div class="dialog-wrapper">
    <div class="dialog-container">
        <div class="dialog-header">
            @_header
        </div>
        <div class="dialog-content">
            @_message
        </div>
        <div class="dialog-action">
            <button class="btn" @onclick=@OKButtonOnClick>OK</button>
            <button class="btn" @onclick=@CancelButtonOnClick>キャンセル</button>
        </div>
    </div>
</div>
}
@code {
    private TaskCompletionSource<bool> _tcs = null!;
    private bool _isShow = false;

    private string _header = string.Empty;
    private string _message = string.Empty;

    public Task ShowAsync(string header, string message)
    {
        _header = header;
        _message = message;
        _isShow = true;
        _tcs = new TaskCompletionSource<bool>();
        StateHasChanged();
        return _tcs.Task;
    }

    private void OKButtonOnClick()
    {
        _isShow = false;
        StateHasChanged();
        _tcs.SetResult(true);
    }

    private void CancelButtonOnClick()
    {
        _isShow = false;
        StateHasChanged();
        _tcs.SetResult(false);
    }
}
